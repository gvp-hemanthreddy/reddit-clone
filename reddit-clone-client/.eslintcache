[{"/Users/chinh1/Desktop/Personal/github/own/reddit-clone/reddit-clone-client/src/index.js":"1","/Users/chinh1/Desktop/Personal/github/own/reddit-clone/reddit-clone-client/src/App.js":"2","/Users/chinh1/Desktop/Personal/github/own/reddit-clone/reddit-clone-client/src/reportWebVitals.js":"3","/Users/chinh1/Desktop/Personal/github/own/reddit-clone/reddit-clone-client/src/components/Register.js":"4","/Users/chinh1/Desktop/Personal/github/own/reddit-clone/reddit-clone-client/src/components/Home.js":"5","/Users/chinh1/Desktop/Personal/github/own/reddit-clone/reddit-clone-client/src/components/InputGroup.js":"6","/Users/chinh1/Desktop/Personal/github/own/reddit-clone/reddit-clone-client/src/components/Login.js":"7","/Users/chinh1/Desktop/Personal/github/own/reddit-clone/reddit-clone-client/src/utils/LocalStorageService.js":"8","/Users/chinh1/Desktop/Personal/github/own/reddit-clone/reddit-clone-client/src/components/NavBar.js":"9"},{"size":1944,"mtime":1609271727238,"results":"10","hashOfConfig":"11"},{"size":508,"mtime":1609262218123,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1609077181576,"results":"13","hashOfConfig":"11"},{"size":3790,"mtime":1609318988663,"results":"14","hashOfConfig":"11"},{"size":4076,"mtime":1609356166553,"results":"15","hashOfConfig":"11"},{"size":687,"mtime":1609260445983,"results":"16","hashOfConfig":"11"},{"size":2999,"mtime":1609318974563,"results":"17","hashOfConfig":"11"},{"size":876,"mtime":1609271613694,"results":"18","hashOfConfig":"11"},{"size":1229,"mtime":1609319085963,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1319iyz",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/Users/chinh1/Desktop/Personal/github/own/reddit-clone/reddit-clone-client/src/index.js",[],["39","40"],"/Users/chinh1/Desktop/Personal/github/own/reddit-clone/reddit-clone-client/src/App.js",[],"/Users/chinh1/Desktop/Personal/github/own/reddit-clone/reddit-clone-client/src/reportWebVitals.js",[],"/Users/chinh1/Desktop/Personal/github/own/reddit-clone/reddit-clone-client/src/components/Register.js",[],"/Users/chinh1/Desktop/Personal/github/own/reddit-clone/reddit-clone-client/src/components/Home.js",["41"],"/Users/chinh1/Desktop/Personal/github/own/reddit-clone/reddit-clone-client/src/components/InputGroup.js",[],"/Users/chinh1/Desktop/Personal/github/own/reddit-clone/reddit-clone-client/src/components/Login.js",[],"/Users/chinh1/Desktop/Personal/github/own/reddit-clone/reddit-clone-client/src/utils/LocalStorageService.js",[],"/Users/chinh1/Desktop/Personal/github/own/reddit-clone/reddit-clone-client/src/components/NavBar.js",[],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":21,"column":13,"nodeType":"48","endLine":29,"endColumn":4},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-global-assign","no-unsafe-negation"]